{"version":3,"sources":["services/handles.js","services/index.js","actions.js","containers/Status.js","graphics/Raptor.js","styles/styles.js","components/Scanning.js","containers/Scan.js","markers/RaptorMarker.js","graphics/Smiler.js","components/Map.js","components/Logout.js","containers/MainView/MapView.js","components/Modal.js","containers/MainView/Chodal.js","containers/MainView/index.js","animations/Loading.js","containers/Registration.js","services/utils.js","statuses.js","components/CMap.js","containers/Creator.js","App.js","reducers/device.js","reducers/map.js","reducers/socket.js","reducers/ui.js","reducers/index.js","store.js","index.js"],"names":["fetchOptions","method","token","body","headers","Authorization","JSON","stringify","handleResponse","response","status","json","then","error","Error","handleError","dispatch","message","type","ERROR","tRequest","endPoint","headerData","localStorage","getItem","options","fetch","process","data","SET_TOKEN","RESPONSE","catch","getToken","hash","setItem","deviceInit","getState","a","window","requestIdleCallback","Fingerprint2","get","components","values","map","component","value","device","x64hash128","join","readyDelay","setTimeout","delay","registerDevice","email","newToken","logOut","socketWrap","io","path","transport","socketMessage","listenDispatcher","topic","payload","markers","listenTo","socket","on","connectSocketThenEmit","emit","connect","state","getMarkers","useState","focus","setFocus","useEffect","addEventListener","style","display","Svg","styled","svg","Raptor","bg","fill","opacity","reff","stroke","ref","x","y","viewBox","d","strokeWidth","strokeMiterlimit","ScanContainer","div","ButtonContainer","Input","input","Button","button","MapContainer","Container","Message","Scanning","scanTainer","displayMessage","setMessage","raptorRef","useRef","text","current","raptor","getElementsByTagName","frame","startTime","Date","now","scale","chroma","counter","animate","cancelAnimationFrame","color","background","boxShadow","raptorOutline","colorMessage","diff","colorWave","Math","sin","bgWave","cos","rotateWave","transform","document","requestAnimationFrame","to","toUpperCase","sendCode","code","listenToCodeResponse","listenToWin","listenToMarkers","connected","match","meepo","RegExp","exec","params","height","greatPlaceStyle","position","width","left","top","borderRadius","textAlign","fontSize","fontWeight","cursor","userSelect","greatPlaceStyleHover","RaptorMarker","found","setBg","r","floor","onPointerDown","console","log","Smiler","rest","Map","history","mapKey","places","getElementById","length","id","defaultCenter","ppark","defaultZoom","bootstrapURLKeys","key","styles","whiteMap","onClick","e","onChildClick","p","push","m","lat","lng","Logout","logout","connectToSocket","name","modalStyle","bottom","right","backgroundColor","Modal","children","createPortal","ModalMessage","props","maxHeight","Chodal","setMaxHeight","setBackground","goBack","marker","url","render","Loading","setOpacity","setError","register","test","String","toLowerCase","validateEmail","keyCode","margin","borderBottom","onChange","target","placeholder","border","Overlay","CMap","userLocation","setUserLocation","setMarker","details","belongs","info","setInfo","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","handleChange","Object","keys","i","ui","loading","welcome","Status","Scan","Creator","MainView","deviceState","action","mapState","socketState","listeners","initialState","reducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","next","removeItem","AES","decrypt","toString","enc","Utf8","ReactDOM","basename"],"mappings":"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","file":"static/js/main.863e9f7d.chunk.js","sourcesContent":["import { ERROR } from \"../actions\";\r\n\r\nexport const fetchOptions = (method, token, body) => ({\r\n  method,\r\n  headers: token\r\n    ? {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    : { \"Content-Type\": \"application/json\" },\r\n  body: JSON.stringify({ ...body })\r\n});\r\n\r\nexport const handleResponse = response => {\r\n  if (response.status !== 200) {\r\n    return response.json().then(error => {\r\n      throw new Error(error.error);\r\n    });\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const handleError = (error, dispatch) => {\r\n  const { message } = error;\r\n  dispatch({ type: ERROR, error: message });\r\n};\r\n","import { SET_TOKEN, RESPONSE } from \"../actions\";\r\nimport { handleError, handleResponse, fetchOptions } from \"./handles\";\r\n\r\n// there could be a request thunk that delegates dispatches based on the response message\r\nexport const tRequest = (endPoint, headerData, dispatch) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const options = fetchOptions(\"POST\", token, headerData);\r\n  fetch(`${process.env.REACT_APP_SERVER}/${endPoint}`, options)\r\n    .then(handleResponse)\r\n    .then(data => {\r\n      if (data.message === \"verified\" && token) {\r\n        dispatch({\r\n          type: SET_TOKEN,\r\n          token\r\n        });\r\n      }\r\n      dispatch({\r\n        type: RESPONSE,\r\n        response: data.message\r\n      });\r\n    })\r\n    .catch(error => handleError(error, dispatch));\r\n};\r\n\r\nexport const getToken = (dispatch, hash) => {\r\n  const endPoint = \"new_token\";\r\n  const options = fetchOptions(\"POST\", null, { hash });\r\n  fetch(`${process.env.REACT_APP_SERVER}/${endPoint}`, options)\r\n    .then(handleResponse)\r\n    .then(data => {\r\n      const { token } = data;\r\n      localStorage.setItem(\"token\", token);\r\n      dispatch({ type: SET_TOKEN, token });\r\n    })\r\n    .catch(error => handleError(error, dispatch));\r\n};\r\n","import io from \"socket.io-client\";\r\nimport Fingerprint2 from \"fingerprintjs2\";\r\nimport { tRequest, getToken } from \"./services\";\r\n\r\nexport const WELCOME = \"WELCOME\";\r\nexport const LOADING = \"LOADING\";\r\nexport const READY = \"READY\";\r\n\r\nexport const MAP_KEY = \"MAP_KEY\";\r\nexport const DEVICE_INIT = \"DEVICE_INIT\";\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const MAP_INIT = \"MAP_INIT\";\r\nexport const GET_MARKERS = \"GET_MARKERS\";\r\nexport const UPDATE_MAP = \"UPDATE_MAP\";\r\n\r\nexport const CONNECTING = \"CONNECTING\";\r\nexport const CONNECTED = \"CONNECTED\";\r\nexport const LISTEN_TO = \"LISTEN_TO\";\r\nexport const SOCKET_MESSAGE = \"SOCKET_MESSAGE\";\r\n\r\nexport const ERROR = \"ERROR\";\r\nexport const BAD_TOKEN = \"BAD_TOKEN\";\r\nexport const RESPONSE = \"RESPONSE\";\r\nexport const DEVICE_NOT_FOUND = \"DEVICE_NOT_FOUND\";\r\n\r\nexport const FOUND = \"FOUND\";\r\nexport const SEND_CODE = \"SEND_CODE\";\r\n\r\nexport const deviceInit = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: LOADING });\r\n    if (window.requestIdleCallback) {\r\n      requestIdleCallback(function() {\r\n        Fingerprint2.get(async function(components) {\r\n          var values = components.map(function(component) {\r\n            return component.value;\r\n          });\r\n          const device = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n          dispatch({ type: DEVICE_INIT, hash: device });\r\n          if (!getState().device.token) {\r\n            tRequest(\"auth_device\", { device }, dispatch);\r\n          }\r\n          dispatch(readyDelay(1));\r\n        });\r\n      });\r\n    } else {\r\n      setTimeout(function() {\r\n        Fingerprint2.get(async function(components) {\r\n          var values = components.map(function(component) {\r\n            return component.value;\r\n          });\r\n          const device = Fingerprint2.x64hash128(values.join(\"\"), 31);\r\n          dispatch({ type: DEVICE_INIT, hash: device });\r\n          if (!getState().device.token) {\r\n            tRequest(\"auth_device\", { device }, dispatch);\r\n          }\r\n          dispatch(readyDelay(1));\r\n        });\r\n      }, 500);\r\n    }\r\n  };\r\n};\r\n\r\nexport const authenticateDevice = () => {};\r\n\r\nexport const readyDelay = delay => {\r\n  return dispatch => {\r\n    setTimeout(() => dispatch({ type: READY }), delay);\r\n  };\r\n};\r\n\r\nexport const registerDevice = email => {\r\n  return async (dispatch, getState) => {\r\n    const {\r\n      device: { hash }\r\n    } = getState();\r\n    tRequest(\"register_device\", { email, hash }, dispatch);\r\n    dispatch({ type: LOADING });\r\n    dispatch(readyDelay(2000));\r\n  };\r\n};\r\n\r\nexport const newToken = () => {\r\n  return async (dispatch, getState) => {\r\n    const {\r\n      device: { hash }\r\n    } = getState();\r\n    getToken(dispatch, hash);\r\n    dispatch({ type: LOADING });\r\n    dispatch(readyDelay(2000));\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  return async dispatch => {\r\n    localStorage.setItem(\"token\", \"\");\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n};\r\n\r\nfunction socketWrap(hash) {\r\n  return io(\r\n    `${process.env.REACT_APP_SOCKET_SERVER}?token=${localStorage.getItem(\r\n      \"token\"\r\n    )}&device=${hash}`,\r\n    { path: \"/socket.io\", transport: [\"websocket\"] }\r\n  );\r\n}\r\n\r\n// MARKERS SHOULD HAVE ITS OWN MIDDLEWARE\r\nexport const connectSocket = () => {\r\n  return async (dispatch, getState) => {\r\n    const {\r\n      device: { hash }\r\n    } = getState();\r\n    const socket = await socketWrap(hash);\r\n    socket.on(\"error\", error => dispatch({ type: ERROR, error }));\r\n    socket.on(\"found\", found => dispatch({ type: FOUND, name: found }));\r\n    socket.on(\"markers\", markers => {\r\n      if (markers.length === 0) dispatch({ type: ERROR, error: BAD_TOKEN });\r\n      dispatch({ type: MAP_INIT, markers });\r\n    });\r\n    dispatch({ type: CONNECTED, socket });\r\n  };\r\n};\r\n\r\n// these two are a little silly-- this could live in the scan or be more general if\r\n// there is a QR scanner screen\r\nexport const socketMessage = message => {\r\n  return dispatch => {\r\n    dispatch({ type: SOCKET_MESSAGE, message });\r\n  };\r\n};\r\n\r\nconst listenDispatcher = (dispatch, topic, payload) => {\r\n  if (topic === \"markers\") {\r\n    dispatch({ type: MAP_INIT, markers: payload });\r\n  }\r\n};\r\n\r\nexport const listenTo = topic => {\r\n  return async (dispatch, getState) => {\r\n    getState().socket.socket.on(topic, message => {\r\n      listenDispatcher(dispatch, topic, message);\r\n      dispatch(socketMessage(message));\r\n    });\r\n    dispatch({ type: \"LISTEN_TO\", topic });\r\n  };\r\n};\r\n// ------\r\n\r\nexport const getMarkers = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: GET_MARKERS });\r\n  };\r\n};\r\n\r\nexport const connectSocketThenEmit = (emit, value) => {\r\n  return async (dispatch, getState) => {\r\n    const {\r\n      device: { hash }\r\n    } = getState();\r\n    const socket = await socketWrap(hash);\r\n    socket.on(\"error\", error => dispatch({ type: ERROR, error }));\r\n    dispatch({ type: CONNECTED, socket });\r\n    if (socket) {\r\n      socket.emit(emit, value);\r\n    }\r\n  };\r\n};\r\n\r\n// should probably be refactored into just thunk action\r\nexport const emit = (emit, value) => {\r\n  return async (dispatch, getState) => {\r\n    const { socket } = getState();\r\n    if (!socket.socket) {\r\n      dispatch(connectSocketThenEmit(emit, value));\r\n    } else {\r\n      socket.socket.emit(emit, value);\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { GET_MARKERS } from \"../actions\";\r\n\r\nconst Status = ({ getMarkers, status }) => {\r\n  const [focus, setFocus] = useState(\"lala\");\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"focus\", () => setFocus(\"focus\"));\r\n    window.addEventListener(\"blur\", () => setFocus(\"nofucs\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (focus === \"focus\") {\r\n      getMarkers();\r\n    }\r\n  }, [focus, getMarkers]);\r\n\r\n  return (\r\n    <div style={{ display: \"none\" }}>\r\n      {status}-{focus}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => state.socket;\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMarkers: () => dispatch({ type: GET_MARKERS })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Status);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Svg = styled.svg`\r\n  margin: 0rem auto 0rem;\r\n  height: 100%;\r\n  max-width: 360px;\r\n  color: black;\r\n  display: block;\r\n`;\r\n\r\nconst Raptor = ({\r\n  bg,\r\n  fill = \"#FFFFFF\",\r\n  opacity = 1,\r\n  reff,\r\n  stroke = \"#FFFFFF\"\r\n}) => (\r\n  <Svg ref={reff} x=\"0px\" y=\"0px\" viewBox=\"0 0 864 864\">\r\n    <path\r\n      fill={bg}\r\n      d=\"M704.172,432.004c0-150.322-121.847-272.176-272.167-272.176c-150.313,0-272.177,121.854-272.177,272.176\r\nc0,150.321,121.863,272.169,272.177,272.169C582.325,704.172,704.172,582.325,704.172,432.004z\"\r\n    />\r\n\r\n    <path\r\n      stroke={stroke}\r\n      fill={fill}\r\n      opacity={opacity}\r\n      strokeWidth=\"10\"\r\n      strokeMiterlimit=\"10\"\r\n      d=\"M623.373,394.194v-34.077l-120.796-34.103l-22.437,66.463\r\nl-129.417,60.525l-135.987-70.14l-6.756,15.581l133.588,116.586l57.817-7.664l19.241,32.798l-40.041,34.124\r\nc9.488,10.356,60.784,36.836,60.784,36.836l25.191-2.766l-34.262-35.532l25.89-17.396l12.872-58.715l62.837-24.296l-3.854,33.212\r\nl14.588,3.42l24.923-51.034l-46.001-18.883l15.536-49.255L623.373,394.194z\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default Raptor;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ScanContainer = styled.div`\r\n  margin: 10% auto;\r\n  background: white;\r\n  border: 1px solid black;\r\n  color: black;\r\n  padding: 8%;\r\n  font-family: Arial;\r\n  font-weight: bold;\r\n  font-size: 2.4rem;\r\n  box-shadow: 13px 16px #ff0909;\r\n  height: 3rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 80%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n  div {\r\n    margin: 4% auto;\r\n    border-bottom: 4px dotted black;\r\n    padding: 3%;\r\n    width: 80%;\r\n  }\r\n\r\n  input,\r\n  button {\r\n    margin: 7% auto 7%;\r\n    align-self: center;\r\n    padding: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 700px) {\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  text-align: center;\r\n  font-size: 22px;\r\n  font-family: Arial;\r\n  border: 2px black solid;\r\n  height: 56px;\r\n  box-shadow: 9px 10px black;\r\n  width: 79%;\r\n  max-width: 430px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 8rem;\r\n  height: 8rem;\r\n  border-radius: 50%;\r\n  border: 2px solid #000000;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  background: white;\r\n  box-shadow: -5px 3px black;\r\n  line-height: 122px;\r\n`;\r\n\r\nexport const MapContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport chroma from \"chroma-js\";\r\nimport Raptor from \"../graphics/Raptor\";\r\nimport { ScanContainer } from \"../styles/styles\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  margin: 1rem;\r\n  background: white;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 30% 40% 30%;\r\n  max-width: 700px;\r\n  @media only screen and (min-width: 700px) {\r\n    margin: 1rem auto;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  color: white;\r\n  font-size: 1.6rem;\r\n  text-align: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-weight: bold;\r\n  width: 70%;\r\n  margin: auto;\r\n  text-shadow: 4px 4px black;\r\n  box-shadow: 7px 11px black;\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Scanning = ({ message, scanTainer }) => {\r\n  const [displayMessage, setMessage] = useState(\"scanning...\");\r\n  const raptorRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const text = scanTainer.current;\r\n    const raptor = raptorRef.current;\r\n    raptor.getElementsByTagName(\"path\")[0].style.stroke = \"red\";\r\n    raptor.getElementsByTagName(\"path\")[0].style.strokeWidth = \"21px\";\r\n    const startTime = Date.now();\r\n    const scale = chroma.scale([\"black\", \"red\"]);\r\n    let frame;\r\n    let counter = 0;\r\n\r\n    const found = () => {\r\n      cancelAnimationFrame(frame);\r\n      text.style.color = \"black\";\r\n      text.style.background = \"white\";\r\n      text.style.boxShadow = `13px 16px black`;\r\n    };\r\n\r\n    const colorMessage = () => {\r\n      const raptorOutline = raptor.getElementsByTagName(\"path\")[0].style;\r\n      if (message === \"you already found this one!\") {\r\n        raptorOutline.stroke = \"yellow\";\r\n      } else if (message === \"cool find!\") {\r\n        raptorOutline.stroke = \"#9dff9d\";\r\n      } else {\r\n        raptorOutline.stroke = \"red\";\r\n      }\r\n    };\r\n\r\n    const animate = () => {\r\n      if (message) {\r\n        counter++;\r\n        if (counter > 200) {\r\n          found();\r\n          colorMessage();\r\n          setMessage(message);\r\n          return;\r\n        }\r\n      }\r\n      const diff = Date.now() - startTime;\r\n      const colorWave = 0.5 * (2 + Math.sin(diff * 0.001));\r\n      const bgWave = 0.5 * (1 + Math.cos(diff * 0.001));\r\n      text.style.color = scale(colorWave);\r\n      text.style.background = scale(bgWave);\r\n      text.style.boxShadow = `13px 16px ${scale(colorWave)}`;\r\n      const rotateWave = 180 + 360 * Math.sin(diff * 0.001) * 0.5;\r\n      raptor.style.transform = `rotate(${rotateWave}deg)`;\r\n      document.body.style.background = scale(bgWave * 0.8);\r\n      frame = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => cancelAnimationFrame(frame);\r\n  }, [message, scanTainer]);\r\n\r\n  return (\r\n    <Container>\r\n      <ScanContainer ref={scanTainer}>\r\n        {displayMessage === \"scanning...\" ? \"Scanning\" : \"Scanned\"}\r\n      </ScanContainer>\r\n      <div>\r\n        <Link to=\"/\">\r\n          <Raptor reff={raptorRef} />\r\n        </Link>\r\n      </div>\r\n      <Message>{displayMessage.toUpperCase()}</Message>\r\n    </Container>\r\n  );\r\n};\r\nexport default Scanning;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { emit, listenTo } from \"../actions\";\r\n\r\nimport Scanning from \"../components/Scanning\";\r\nimport { ScanContainer } from \"../styles/styles\";\r\n\r\nconst Scan = ({\r\n  connected,\r\n  listenToCodeResponse,\r\n  listenToMarkers,\r\n  listenToWin,\r\n  match,\r\n  message,\r\n  sendCode\r\n}) => {\r\n  const scanTainer = useRef();\r\n  const myRe = new RegExp(process.env.REACT_APP_REG);\r\n  const meepo = myRe.exec(match.params.code);\r\n\r\n  useEffect(() => {\r\n    if (!meepo) {\r\n      const {\r\n        params: { code }\r\n      } = match;\r\n      sendCode(code);\r\n    }\r\n  }, [meepo, match, sendCode]);\r\n\r\n  useEffect(() => {\r\n    if (!connected) return;\r\n    listenToCodeResponse();\r\n    listenToWin();\r\n    listenToMarkers();\r\n  }, [connected, listenToWin, listenToCodeResponse, listenToMarkers]);\r\n\r\n  return (\r\n    <div style={{ height: \"90%\" }}>\r\n      {!meepo ? (\r\n        <Scanning scanTainer={scanTainer} message={message} />\r\n      ) : (\r\n        <ScanContainer ref={scanTainer}>\r\n          This is not a valid request for reasons I cannot explain :)\r\n        </ScanContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => state.socket;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sendCode: code => dispatch(emit(\"code\", code)),\r\n  listenToCodeResponse: () => dispatch(listenTo(\"code_response\")),\r\n  listenToWin: () => dispatch(listenTo(\"win\")),\r\n  listenToMarkers: () => dispatch(listenTo(\"markers\"))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Raptor from \"../graphics/Raptor\";\r\nconst K_SIZE = 70;\r\n\r\nconst greatPlaceStyle = {\r\n  // initially any map object has left top corner at lat lng coordinates\r\n  // it's on you to set object origin to 0,0 coordinates\r\n  position: \"absolute\",\r\n  width: K_SIZE,\r\n  height: K_SIZE,\r\n  left: -K_SIZE / 2,\r\n  top: -K_SIZE / 2,\r\n\r\n  //   border: \"5px solid #f44336\",\r\n  borderRadius: K_SIZE,\r\n  // backgroundColor: \"white\",\r\n  textAlign: \"center\",\r\n  color: \"#3f51b5\",\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n  //   padding: 4,\r\n  cursor: \"pointer\",\r\n  userSelect: \"none\"\r\n};\r\n\r\nconst greatPlaceStyleHover = {\r\n  ...greatPlaceStyle\r\n  //   border: \"5px solid #3f51b5\",\r\n  //   color: \"#f44336\"\r\n};\r\n\r\nconst RaptorMarker = ({ found }) => {\r\n  const [bg, setBg] = useState(\"rgb(200,0,0)\");\r\n  useEffect(() => {\r\n    const startTime = Date.now();\r\n    let frame;\r\n    const animate = () => {\r\n      const diff = Date.now() - startTime;\r\n      const r = 200 + 40 * Math.sin(diff * 0.01);\r\n      const color = `rgb(${Math.floor(r)},0,0)`;\r\n      setBg(color);\r\n      if (!found) {\r\n        frame = requestAnimationFrame(animate);\r\n      } else {\r\n        cancelAnimationFrame(frame);\r\n      }\r\n    };\r\n    animate();\r\n    return () => cancelAnimationFrame(frame);\r\n  }, [found]);\r\n  return (\r\n    <div style={greatPlaceStyleHover} onPointerDown={console.log}>\r\n      <Raptor\r\n        bg={found ? \"#7ffdcb\" : bg}\r\n        fill={`${found ? \"#FF0000\" : \"#FFFFFF\"}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RaptorMarker;\r\n","import React from \"react\";\r\n\r\nconst Smiler = ({ ...rest }) => {\r\n  return (\r\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 400 400\" {...rest}>\r\n      <g>\r\n        <path\r\n          d=\"M210.51,51c81.3,0,147.57,66.36,147.35,147.56c-0.22,81.32-66.23,147.26-147.34,147.2\r\n\t\tc-81.38-0.07-147.64-66.42-147.35-147.55C63.47,116.8,129.33,51,210.51,51z M210.47,66.64C137.9,66.68,78.75,125.88,78.81,198.42\r\n\t\tc0.06,72.61,59.22,131.74,131.75,131.69c72.59-0.05,131.71-59.23,131.67-131.78C342.18,125.73,283.03,66.6,210.47,66.64z\"\r\n        />\r\n        <path\r\n          d=\"M208.63,299.23c-29.03-0.67-54.45-12.82-74-36.98c-3.39-4.18-3.2-8.59,0.34-11.6c3.61-3.07,8.17-2.44,11.7,1.9\r\n\t\tc12.38,15.19,27.92,25.44,47.25,28.96c31.58,5.75,58.31-3.18,79.44-27.76c1.25-1.45,2.47-3.08,4.06-4.05\r\n\t\tc3.09-1.89,7.18-0.92,9.53,1.85c2.49,2.94,2.85,6.86-0.07,9.94c-6.23,6.56-12.34,13.41-19.44,18.92\r\n\t\tC251.26,292.95,231.11,299.19,208.63,299.23z\"\r\n        />\r\n        <path\r\n          d=\"M125.31,175.16c-0.04-12.78,10.18-23.19,22.88-23.3c12.89-0.11,23.44,10.19,23.62,23.04\r\n\t\tc0.17,12.75-10.35,23.42-23.18,23.48C135.7,198.44,125.35,188.13,125.31,175.16z\"\r\n        />\r\n        <path\r\n          d=\"M295.73,175.25c-0.04,12.91-10.49,23.23-23.42,23.13c-12.66-0.1-23.05-10.55-23.08-23.22\r\n\t\tc-0.03-12.8,10.5-23.31,23.35-23.31C285.48,151.86,295.77,162.26,295.73,175.25z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\nexport default Smiler;\r\n","import React, { useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { MapContainer } from \"../styles/styles\";\r\nimport RaptorMarker from \"../markers/RaptorMarker\";\r\nimport whiteMap from \"../styles/whiteMap.json\";\r\nimport Smiler from \"../graphics/Smiler\";\r\n\r\nconst Map = ({ history, mapKey, markers, places }) => {\r\n  // const [userLocation, setUserLocation] = useState();\r\n  useEffect(() => {\r\n    const startTime = Date.now();\r\n    let frame;\r\n    const animate = () => {\r\n      const diff = Date.now() - startTime;\r\n      try {\r\n        const smiler = document.getElementById(\"smiler\");\r\n        smiler.style.opacity = Math.sin(diff);\r\n        frame = requestAnimationFrame(animate);\r\n      } catch {\r\n        cancelAnimationFrame(frame);\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }, [markers]);\r\n\r\n  // useEffect(() => {\r\n  //   navigator.geolocation.getCurrentPosition(p => {\r\n  //     const { latitude: lat, longitude: lng } = p.coords;\r\n  //     setUserLocation({ lat, lng });\r\n  //   });\r\n  // }, []);\r\n\r\n  if (markers.length === 0) {\r\n    return (\r\n      <div>\r\n        <Smiler id=\"smiler\" style={{ fill: \"red\" }} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <MapContainer>\r\n      <GoogleMapReact\r\n        defaultCenter={places.ppark}\r\n        // defaultCenter={userLocation}\r\n        defaultZoom={17}\r\n        bootstrapURLKeys={{ key: mapKey }}\r\n        options={{ styles: whiteMap }}\r\n        onClick={e => console.log(e)}\r\n        onChildClick={p => {\r\n          history.push(`/pop/${p}`);\r\n        }}\r\n      >\r\n        {markers.map(m => {\r\n          return (\r\n            <RaptorMarker\r\n              key={m.hash}\r\n              id={m.hash}\r\n              found={m.found}\r\n              lat={m.lat}\r\n              lng={m.lng}\r\n            />\r\n          );\r\n        })}\r\n      </GoogleMapReact>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n`;\r\nconst Button = styled.button`\r\n  background: black;\r\n  color: white;\r\n  width: 100px;\r\n  height: 47px;\r\n  border: 5px solid white;\r\n  font-family: monospace;\r\n  font-weight: bolder;\r\n  opacity: 67%;\r\n`;\r\n\r\nconst Logout = ({ logout }) => {\r\n  return (\r\n    <Container onClick={logout}>\r\n      <Button>Logout</Button>\r\n    </Container>\r\n  );\r\n};\r\nexport default Logout;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { connectSocket, getMarkers, logOut } from \"../../actions\";\r\nimport Status from \"../Status\";\r\nimport Map from \"../../components/Map\";\r\nimport Logout from \"../../components/Logout\";\r\n\r\n// when the map socket connects it needs to update it's marker map\r\nconst MapView = ({\r\n  connected,\r\n  connectToSocket,\r\n  getMarkers,\r\n  history,\r\n  logout,\r\n  mapKey,\r\n  markers,\r\n  places\r\n}) => {\r\n  useEffect(() => {\r\n    if (connected) return;\r\n    connectToSocket();\r\n    //eslint-disable-next-line\r\n  }, [connectToSocket]);\r\n\r\n  useEffect(() => {\r\n    if (!connected) return;\r\n    getMarkers();\r\n  }, [connected, getMarkers]);\r\n  return (\r\n    <div>\r\n      <Status />\r\n      <Logout logout={logout} />\r\n      <Map\r\n        history={history}\r\n        mapKey={mapKey}\r\n        markers={markers}\r\n        places={places}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  map: { mapKey, markers, places },\r\n  socket: { connected }\r\n}) => ({\r\n  connected,\r\n  mapKey,\r\n  markers,\r\n  places\r\n});\r\nconst mapDipstachToProps = dispatch => ({\r\n  connectToSocket: () => dispatch(connectSocket()),\r\n  getMarkers: () => dispatch(getMarkers()),\r\n  logout: () => dispatch(logOut()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDipstachToProps)(MapView);\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalStyle = {\r\n  position: \"fixed\",\r\n  left: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n  backgroundColor: \"rgba(0,0,0,.4)\",\r\n  color: \"#FFF\",\r\n  fontSize: \"40px\"\r\n};\r\nconst Modal = ({ children, onClick }) => {\r\n  return createPortal(\r\n    <div style={modalStyle} onClick={onClick}>\r\n      {children}\r\n    </div>,\r\n    document.getElementById(\"modal_root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ModalMessage = styled.div`\r\n  margin: auto;\r\n  background: ${props => props.background};\r\n  width: 60%;\r\n  display: block;\r\n  padding: 1rem;\r\n  max-height: ${props => `${props.maxHeight}px`};\r\n  overflow: hidden;\r\n  transition: max-height 1s, background 1s;\r\n`;\r\n\r\nconst Chodal = ({ history, match }) => {\r\n  const [maxHeight, setMaxHeight] = useState(0);\r\n  const [background, setBackground] = useState(\"red\");\r\n  useEffect(() => {\r\n    setMaxHeight(1000);\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      onClick={() => {\r\n        setBackground(\"white\");\r\n        setMaxHeight(0);\r\n        setTimeout(() => history.goBack(), 1000);\r\n      }}\r\n    >\r\n      <ModalMessage background={background} maxHeight={maxHeight}>\r\n        {match.params.marker}\r\n      </ModalMessage>\r\n    </Modal>\r\n  );\r\n};\r\nexport default Chodal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MapView from \"./MapView\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chodal from \"./Chodal\";\r\n\r\nconst MainView = ({ history, match }) => {\r\n  return (\r\n    <div>\r\n      <Route\r\n        path={`${match.url}pop/:marker`}\r\n        render={({ match }) => <Chodal history={history} match={match} />}\r\n      />\r\n      <MapView history={history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Raptor from \"../graphics/Raptor\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Message = styled.div`\r\n  color: red;\r\n  font-size: 54px;\r\n  text-align: center;\r\n  font-family: Arial;\r\n  text-shadow: 4px 3px black;\r\n`;\r\n\r\nconst Loading = ({ fill = \"white\", message }) => {\r\n  const [opacity, setOpacity] = useState(1);\r\n  useEffect(() => {\r\n    let frame;\r\n    const startTime = Date.now();\r\n    const animate = () => {\r\n      frame = requestAnimationFrame(animate);\r\n      const diff = Date.now() - startTime;\r\n      setOpacity(0.5 * (1.5 + Math.sin(diff * 0.003)));\r\n    };\r\n    animate();\r\n    return () => cancelAnimationFrame(frame);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Raptor opacity={opacity} fill={fill} />\r\n      <Message>{message}</Message>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { DEVICE_NOT_REGISTERED } from \"../statuses\";\r\nimport { Button, Input, ButtonContainer } from \"../styles/styles\";\r\nimport { newToken, registerDevice } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../animations/Loading\";\r\nimport { validateEmail } from \"../services/utils\";\r\nimport Smiler from \"../graphics/Smiler\";\r\n\r\nconst Registration = ({ getToken, hash, registerDevice, status, token }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const email = useRef();\r\n\r\n  const register = () => {\r\n    if (email.current === \"\") return;\r\n    if (!validateEmail(email.current)) {\r\n      setError(\"This email is invalid...\");\r\n      return;\r\n    }\r\n    registerDevice(email.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", e => {\r\n      if (e.keyCode === 13) {\r\n        register();\r\n      }\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  console.log(hash);\r\n  if (!hash) return <Loading />;\r\n\r\n  if (status === DEVICE_NOT_REGISTERED) {\r\n    const handleChange = e => (email.current = e.target.value);\r\n    return (\r\n      <ButtonContainer>\r\n        <Smiler style={{ width: \"35%\", margin: \"0 auto\" }} />\r\n        <div>hmm I don't recognize this device...</div>\r\n        <div>please sync it to your email</div>\r\n        <div\r\n          style={{\r\n            color: \"#f36060\",\r\n            display: error ? \"block\" : \"none\",\r\n            borderBottom: \"none\",\r\n            margin: \"7% auto -8%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n        <Input onChange={handleChange} name=\"email\" placeholder=\"email...\" />\r\n        <Button onClick={register}>Sync</Button>\r\n      </ButtonContainer>\r\n    );\r\n  }\r\n\r\n  if (!token) {\r\n    return (\r\n      <ButtonContainer>\r\n        <Smiler style={{ width: \"35%\", margin: \"0 auto\", fill: \"#3ef3ff\" }} />\r\n        <div style={{ border: \"2px solid black\" }}>\r\n          <div>oh boy! welcome back :)</div>\r\n          <div>you are looking quite nice today</div>\r\n          <div>press connect below to sync</div>\r\n        </div>\r\n        <Button onClick={getToken}>Connect</Button>\r\n      </ButtonContainer>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => state.device;\r\nconst mapDispatchToProps = dispatch => ({\r\n  getToken: () => dispatch(newToken()),\r\n  registerDevice: email => dispatch(registerDevice(email))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","export function validateEmail(email) {\r\n  // eslint-disable-next-line\r\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n","export const DEVICE_NOT_REGISTERED = \"device_not_registered\";\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { MapContainer } from \"../styles/styles\";\r\nimport RaptorMarker from \"../markers/RaptorMarker\";\r\nimport whiteMap from \"../styles/whiteMap.json\";\r\nimport Smiler from \"../graphics/Smiler\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0px;\r\n  background: black;\r\n  color: white;\r\n  z-index: 10;\r\n  width: 120px;\r\n  border: 5px white solid;\r\n  padding: 0.5rem;\r\n  opacity: 67%;\r\n\r\n  input {\r\n    width: 90%;\r\n    margin: 4px;\r\n    padding: 2px;\r\n  }\r\n`;\r\n\r\nconst CMap = ({ mapKey }) => {\r\n  const [userLocation, setUserLocation] = useState();\r\n  const [marker, setMarker] = useState([]);\r\n  const [info, setInfo] = useState({ name: \"\", details: \"\", belongs: \"\" });\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(p => {\r\n      const { latitude: lat, longitude: lng } = p.coords;\r\n      setUserLocation({ lat, lng });\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = e =>\r\n    setInfo({ ...info, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <MapContainer>\r\n      {!userLocation ? (\r\n        <Smiler id=\"smiler\" style={{ fill: \"red\" }} />\r\n      ) : (\r\n        <Fragment>\r\n          <Overlay>\r\n            {Object.keys(info).map(i => {\r\n              return (\r\n                <input\r\n                  key={i}\r\n                  placeholder={i}\r\n                  name={i}\r\n                  onChange={handleChange}\r\n                />\r\n              );\r\n            })}\r\n          </Overlay>\r\n          <GoogleMapReact\r\n            defaultCenter={userLocation}\r\n            defaultZoom={17}\r\n            bootstrapURLKeys={{ key: mapKey }}\r\n            options={{ styles: whiteMap }}\r\n            onClick={e => {\r\n              const marker = {\r\n                key: \"frog\",\r\n                id: \"frog\",\r\n                found: false,\r\n                lat: e.lat,\r\n                lng: e.lng\r\n              };\r\n              setMarker(marker);\r\n            }}\r\n            onChildClick={(e, p) => {\r\n              console.log(e);\r\n            }}\r\n          >\r\n            <RaptorMarker\r\n              key={marker.hash}\r\n              id={marker.hash}\r\n              found={marker.found}\r\n              lat={marker.lat}\r\n              lng={marker.lng}\r\n            />\r\n          </GoogleMapReact>\r\n        </Fragment>\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default CMap;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CMap from \"../components/CMap\";\r\nimport Logout from \"../components/Logout\";\r\nimport { logOut } from \"../actions\";\r\n\r\nconst Creator = ({ logout, mapKey }) => {\r\n  return (\r\n    <div>\r\n      <Logout logout={logout} />\r\n      <CMap mapKey={mapKey} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ map: { mapKey } }) => ({\r\n  mapKey\r\n});\r\nconst mapDipstachToProps = dispatch => ({\r\n  logout: () => dispatch(logOut()),\r\n  dispatch\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDipstachToProps)(Creator);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Status from \"./containers/Status\";\r\nimport Scan from \"./containers/Scan\";\r\nimport { connect } from \"react-redux\";\r\nimport { newToken, registerDevice } from \"./actions\";\r\nimport MainView from \"./containers/MainView\";\r\nimport Registration from \"./containers/Registration\";\r\nimport { DEVICE_NOT_REGISTERED } from \"./statuses\";\r\nimport Loading from \"./animations/Loading\";\r\nimport Creator from \"./containers/Creator\";\r\n\r\nfunction App({ hash, status, token, loading, welcome }) {\r\n  if (welcome) return <Loading fill={\"yellow\"} message={\"welcome!\"} />;\r\n  if (loading) return <Loading message={\"loading ...\"} />;\r\n  if ((status === DEVICE_NOT_REGISTERED && !hash) || !token) {\r\n    return <Registration hash={hash} token={token} status={status} />;\r\n  }\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/status\" component={Status} />\r\n        <Route path=\"/code/:code\" component={Scan} />\r\n        <Route path=\"/creator\" component={Creator} />\r\n        <Route path=\"/\" component={MainView} />\r\n        <Route path=\"/\" render={() => <div>nope</div>} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  device: { error, hash, status, token },\r\n  ui: { loading, welcome }\r\n}) => ({\r\n  error,\r\n  hash,\r\n  loading,\r\n  status,\r\n  token,\r\n  welcome\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getToken: () => dispatch(newToken()),\r\n  registerDevice: () => dispatch(registerDevice())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { DEVICE_INIT, SET_TOKEN, ERROR, RESPONSE, LOGOUT } from \"../actions\";\r\n\r\nconst deviceState = {\r\n  hash: 0x0,\r\n  token: 0x0,\r\n  error: \"\",\r\n  response: \"\",\r\n  status: \"\"\r\n};\r\n\r\nconst device = (state = deviceState, action) => {\r\n  switch (action.type) {\r\n    case DEVICE_INIT:\r\n      const { hash } = action;\r\n      return { ...state, hash };\r\n    case SET_TOKEN:\r\n      const { token } = action;\r\n      return { ...state, token };\r\n    case LOGOUT:\r\n      return { ...state, token: 0x0 };\r\n    case ERROR:\r\n      const { error } = action;\r\n      return { ...state, error, status: error };\r\n    case RESPONSE:\r\n      const { response } = action;\r\n      return { ...state, response, status: response };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default device;\r\n","import { MAP_INIT, MAP_KEY } from \"../actions\";\r\n\r\nconst ppark = {\r\n  lat: 40.66257,\r\n  lng: -73.968564\r\n};\r\n\r\nconst mapState = {\r\n  places: { ppark },\r\n  mapKey: \"\",\r\n  markers: []\r\n};\r\n\r\nconst map = (state = mapState, action) => {\r\n  switch (action.type) {\r\n    case MAP_INIT:\r\n      const { markers } = action;\r\n      return { ...state, markers };\r\n    case MAP_KEY:\r\n      const { mapKey } = action;\r\n      return { ...state, mapKey };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default map;\r\n","import {\r\n  CONNECTING,\r\n  CONNECTED,\r\n  GET_MARKERS,\r\n  LISTEN_TO,\r\n  SOCKET_MESSAGE\r\n} from \"../actions\";\r\n\r\nconst socketState = {\r\n  socket: null,\r\n  connected: false,\r\n  status: \"disconnected\",\r\n  listeners: []\r\n};\r\n\r\nconst socket = (state = socketState, action) => {\r\n  switch (action.type) {\r\n    case CONNECTING:\r\n      return { ...state, status: \"connecting...\" };\r\n    case CONNECTED:\r\n      const { socket } = action;\r\n      return { ...state, status: \"connected\", connected: true, socket };\r\n    case GET_MARKERS:\r\n      state.socket.emit(\"get_markers\");\r\n      return state;\r\n    case LISTEN_TO:\r\n      const { topic } = action;\r\n      return { ...state, listeners: [...state.listeners, topic] };\r\n    case SOCKET_MESSAGE:\r\n      const { message } = action;\r\n      return { ...state, message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default socket;\r\n","import { LOADING, READY, WELCOME } from \"../actions\";\r\n\r\nconst initialState = {\r\n  welcome: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case WELCOME:\r\n      return { ...state, welcome: true };\r\n    case LOADING:\r\n      return { ...state, loading: true };\r\n    case READY:\r\n      return { ...state, loading: false, welcome: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport device from \"./device\";\r\nimport map from \"./map\";\r\nimport socket from \"./socket\";\r\nimport ui from \"./ui\";\r\n\r\nexport default combineReducers({ device, map, socket, ui });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { ERROR, BAD_TOKEN, DEVICE_NOT_FOUND, deviceInit } from \"./actions\";\r\n\r\nconst peelError = ({ getState, dispatch }) => {\r\n  return next => action => {\r\n    console.log(action);\r\n    console.log(getState());\r\n    if (action.type === ERROR) {\r\n      // should this be error or message?\r\n      switch (action.error) {\r\n        case BAD_TOKEN:\r\n          localStorage.removeItem(\"token\");\r\n          break;\r\n        case DEVICE_NOT_FOUND:\r\n          dispatch(deviceInit());\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n    next(action);\r\n  };\r\n};\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk, peelError));\r\n\r\nexport default store;\r\n// what is the balance between monotony and bliss\r\n// what is the need to be differentiated in particular settings and ways\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { deviceInit, WELCOME, MAP_KEY, SET_TOKEN } from \"./actions\";\r\n\r\nimport { AES, enc } from \"crypto-js\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nif (!token) {\r\n  store.dispatch({ type: WELCOME });\r\n}\r\nstore.dispatch(deviceInit());\r\nstore.dispatch({ type: SET_TOKEN, token });\r\n\r\nconst bytes = AES.decrypt(\r\n  process.env.REACT_APP_MAP_KEY,\r\n  process.env.REACT_APP_FROGGY\r\n);\r\nconst mapKey = bytes.toString(enc.Utf8);\r\nstore.dispatch({ type: MAP_KEY, mapKey });\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router basename=\"/\">\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}